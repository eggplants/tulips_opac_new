from pyppeteer import __pyppeteer_home__ as __pyppeteer_home__
from pyppeteer.browser import Browser as Browser
from pyppeteer.chromium_downloader import current_platform as current_platform
from pyppeteer.connection import Connection as Connection
from pyppeteer.errors import BrowserError as BrowserError
from pyppeteer.helper import addEventListener as addEventListener, debugError as debugError, removeEventListeners as removeEventListeners
from pyppeteer.target import Target as Target
from pyppeteer.util import check_chromium as check_chromium, chromium_executable as chromium_executable, download_chromium as download_chromium, get_free_port as get_free_port, merge_dict as merge_dict
from typing import Any, Dict, List

logger: Any
pyppeteer_home: Any
CHROME_PROFILE_PATH: Any
DEFAULT_ARGS: Any

class Launcher:
    port: Any = ...
    url: Any = ...
    chromeClosed: bool = ...
    dumpio: Any = ...
    env: Any = ...
    handleSIGINT: Any = ...
    handleSIGTERM: Any = ...
    handleSIGHUP: Any = ...
    ignoreHTTPSErrors: Any = ...
    defaultViewport: Any = ...
    slowMo: Any = ...
    timeout: Any = ...
    autoClose: Any = ...
    chromeArguments: Any = ...
    temporaryUserDataDir: Any = ...
    chromeExecutable: Any = ...
    cmd: Any = ...
    def __init__(self, options: Dict[str, Any]=..., **kwargs: Any): ...
    connection: Any = ...
    proc: Any = ...
    browserWSEndpoint: Any = ...
    async def launch(self) -> Browser: ...
    async def ensureInitialPage(self, browser: Browser) -> None: ...
    def waitForChromeToClose(self) -> None: ...
    async def killChrome(self) -> None: ...

def get_ws_endpoint(url: Any) -> str: ...
async def launch(options: dict=..., **kwargs: Any) -> Browser: ...
async def connect(options: dict=..., **kwargs: Any) -> Browser: ...
def executablePath() -> str: ...
def defaultArgs(options: Dict=..., **kwargs: Any) -> List[str]: ...
