import asyncio
from pyppeteer.browser import Browser as Browser, BrowserContext as BrowserContext
from pyppeteer.connection import CDPSession as CDPSession
from pyppeteer.page import Page as Page
from typing import Any, Callable, Coroutine, Dict, List, Optional

class Target:
    def __init__(self, targetInfo: Dict, browserContext: BrowserContext, sessionFactory: Callable[[], Coroutine[Any, Any, CDPSession]], ignoreHTTPSErrors: bool, defaultViewport: Optional[Dict], screenshotTaskQueue: List, loop: asyncio.AbstractEventLoop) -> None: ...
    async def createCDPSession(self) -> CDPSession: ...
    async def page(self) -> Optional[Page]: ...
    @property
    def url(self) -> str: ...
    @property
    def type(self) -> str: ...
    @property
    def browser(self) -> Browser: ...
    @property
    def browserContext(self) -> BrowserContext: ...
    @property
    def opener(self) -> Optional[Target]: ...
